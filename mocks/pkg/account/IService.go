// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	account "go-wallet-api/pkg/account"

	mock "github.com/stretchr/testify/mock"
)

// IService is an autogenerated mock type for the IService type
type IService struct {
	mock.Mock
}

// Create provides a mock function with given fields: req
func (_m *IService) Create(req account.CreateRequest) (account.ResponseDTO, error) {
	ret := _m.Called(req)

	var r0 account.ResponseDTO
	if rf, ok := ret.Get(0).(func(account.CreateRequest) account.ResponseDTO); ok {
		r0 = rf(req)
	} else {
		r0 = ret.Get(0).(account.ResponseDTO)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(account.CreateRequest) error); ok {
		r1 = rf(req)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// List provides a mock function with given fields: req
func (_m *IService) List(req account.ListRequest) (account.ResponseListDTO, error) {
	ret := _m.Called(req)

	var r0 account.ResponseListDTO
	if rf, ok := ret.Get(0).(func(account.ListRequest) account.ResponseListDTO); ok {
		r0 = rf(req)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(account.ResponseListDTO)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(account.ListRequest) error); ok {
		r1 = rf(req)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewIService interface {
	mock.TestingT
	Cleanup(func())
}

// NewIService creates a new instance of IService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewIService(t mockConstructorTestingTNewIService) *IService {
	mock := &IService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
